{
  "optimization_timestamp": 1757480262.116978,
  "target_memory_mb": 150,
  "optimization_config": {
    "enable_pre_allocation": true,
    "pre_allocation_size_mb": 18,
    "enable_memory_pooling": true,
    "pool_size_mb": 9,
    "enable_aggressive_gc": false,
    "gc_threshold_mb": 7,
    "enable_memory_mapping": true,
    "cache_size_limit_mb": 75,
    "enable_lazy_loading": true,
    "memory_monitoring_interval": 5.0
  },
  "baseline_profile": {
    "total_memory_mb": 31852.3046875,
    "available_memory_mb": 7216.09375,
    "used_memory_mb": 23318.77734375,
    "process_memory_mb": 1261.42578125,
    "process_memory_percent": 3.960233941078145,
    "peak_memory_mb": 1264.42578125,
    "memory_growth_mb": -3.0,
    "gc_collections": {
      "generation_0": 6,
      "generation_1": 10,
      "generation_2": 14
    },
    "largest_objects": [
      {
        "size_mb": 53.00021743774414,
        "count": 8,
        "filename": "    buffer = bytearray(size)"
      },
      {
        "size_mb": 7.191405296325684,
        "count": 63144,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 6.933771133422852,
        "count": 115409,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 0.996363639831543,
        "count": 6,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.6346616744995117,
        "count": 5734,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.593073844909668,
        "count": 6810,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.24968719482421875,
        "count": 30,
        "filename": "    return Loop()"
      },
      {
        "size_mb": 0.19715595245361328,
        "count": 1531,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.17455577850341797,
        "count": 639,
        "filename": "  File \"<frozen abc>\", line 106"
      },
      {
        "size_mb": 0.1525115966796875,
        "count": 1999,
        "filename": "    return (abs(self.size_diff), self.size,"
      }
    ]
  },
  "final_profile": {
    "total_memory_mb": 31852.3046875,
    "available_memory_mb": 7216.8359375,
    "used_memory_mb": 23301.3125,
    "process_memory_mb": 1259.90625,
    "process_memory_percent": 3.9554633875345067,
    "peak_memory_mb": 1264.42578125,
    "memory_growth_mb": -4.51953125,
    "gc_collections": {
      "generation_0": 9,
      "generation_1": 16,
      "generation_2": 0
    },
    "largest_objects": [
      {
        "size_mb": 58.00032615661621,
        "count": 12,
        "filename": "    buffer = bytearray(size)"
      },
      {
        "size_mb": 7.191405296325684,
        "count": 63144,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 6.933771133422852,
        "count": 115409,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 0.996363639831543,
        "count": 6,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.6346616744995117,
        "count": 5734,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.593073844909668,
        "count": 6810,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.24968719482421875,
        "count": 30,
        "filename": "    return Loop()"
      },
      {
        "size_mb": 0.19715595245361328,
        "count": 1531,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.17455577850341797,
        "count": 639,
        "filename": "  File \"<frozen abc>\", line 106"
      },
      {
        "size_mb": 0.14629554748535156,
        "count": 1305,
        "filename": "    exec(txt, globals, ns)"
      }
    ]
  },
  "memory_improvement": {
    "baseline_memory_mb": 1261.42578125,
    "final_memory_mb": 1259.90625,
    "memory_change_mb": -1.51953125,
    "target_achieved": true
  },
  "pre_allocation_success": true,
  "cache_configuration": {
    "voice_cache": {
      "enabled": true,
      "max_size_mb": 18,
      "ttl_seconds": 3600,
      "eviction_policy": "lru"
    },
    "model_cache": {
      "enabled": true,
      "max_size_mb": 37,
      "ttl_seconds": 7200,
      "eviction_policy": "lru"
    },
    "text_processing_cache": {
      "enabled": true,
      "max_size_mb": 9,
      "ttl_seconds": 1800,
      "eviction_policy": "lru"
    },
    "audio_cache": {
      "enabled": true,
      "max_size_mb": 9,
      "ttl_seconds": 900,
      "eviction_policy": "lru"
    }
  },
  "monitoring_statistics": {
    "duration_seconds": 29.244097232818604,
    "samples_collected": 21,
    "min_memory_mb": 1259.4375,
    "max_memory_mb": 1261.42578125,
    "avg_memory_mb": 1259.8878348214287,
    "memory_variance": 0.3292456386851616,
    "peak_growth_mb": 1.98828125
  },
  "leak_analysis": {
    "memory_growth_mb": 19.55859375,
    "monitoring_duration": 30,
    "potential_leaks": [],
    "top_memory_increases": []
  },
  "recommendations": [
    "Memory target achieved with 151.5MB headroom"
  ]
}