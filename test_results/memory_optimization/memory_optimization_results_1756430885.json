{
  "optimization_timestamp": 1756430885.0267107,
  "target_memory_mb": 150,
  "optimization_config": {
    "enable_pre_allocation": true,
    "pre_allocation_size_mb": 32,
    "enable_memory_pooling": true,
    "pool_size_mb": 16,
    "enable_aggressive_gc": true,
    "gc_threshold_mb": 15,
    "enable_memory_mapping": true,
    "cache_size_limit_mb": 64,
    "enable_lazy_loading": true,
    "memory_monitoring_interval": 1.0
  },
  "baseline_profile": {
    "total_memory_mb": 31852.31640625,
    "available_memory_mb": 14432.765625,
    "used_memory_mb": 15741.24609375,
    "process_memory_mb": 1073.6328125,
    "process_memory_percent": 3.370658506611261,
    "peak_memory_mb": 1073.6328125,
    "memory_growth_mb": 20.62109375,
    "gc_collections": {
      "generation_0": 9,
      "generation_1": 5,
      "generation_2": 10
    },
    "largest_objects": [
      {
        "size_mb": 6.966723442077637,
        "count": 115863,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 6.545292854309082,
        "count": 57521,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 0.9964065551757812,
        "count": 7,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.4545116424560547,
        "count": 5392,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.2827291488647461,
        "count": 3362,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.24970245361328125,
        "count": 30,
        "filename": "    return Loop()"
      },
      {
        "size_mb": 0.19715595245361328,
        "count": 1530,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.15339183807373047,
        "count": 557,
        "filename": "  File \"<frozen abc>\", line 106"
      },
      {
        "size_mb": 0.13886642456054688,
        "count": 515,
        "filename": "    return type(attr_class_name, (tuple,), body)"
      },
      {
        "size_mb": 0.1381378173828125,
        "count": 1609,
        "filename": "    script.splitlines(True),"
      }
    ]
  },
  "final_profile": {
    "total_memory_mb": 31852.31640625,
    "available_memory_mb": 14466.55859375,
    "used_memory_mb": 15701.68359375,
    "process_memory_mb": 1145.03125,
    "process_memory_percent": 3.5948131225248163,
    "peak_memory_mb": 1145.03125,
    "memory_growth_mb": 92.01953125,
    "gc_collections": {
      "generation_0": 106,
      "generation_1": 6,
      "generation_2": 8
    },
    "largest_objects": [
      {
        "size_mb": 21.000163078308105,
        "count": 6,
        "filename": "    buffer = bytearray(size)"
      },
      {
        "size_mb": 6.966723442077637,
        "count": 115863,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 6.5434770584106445,
        "count": 57509,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 0.9964065551757812,
        "count": 7,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.498138427734375,
        "count": 2,
        "filename": "    array = numpy.ndarray(count, dtype=dtype)"
      },
      {
        "size_mb": 0.45438098907470703,
        "count": 5389,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.4159526824951172,
        "count": 4886,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.24970245361328125,
        "count": 30,
        "filename": "    return Loop()"
      },
      {
        "size_mb": 0.19715595245361328,
        "count": 1530,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.15339183807373047,
        "count": 557,
        "filename": "  File \"<frozen abc>\", line 106"
      }
    ]
  },
  "memory_improvement": {
    "baseline_memory_mb": 1073.6328125,
    "final_memory_mb": 1145.03125,
    "memory_change_mb": 71.3984375,
    "target_achieved": true
  },
  "pre_allocation_success": true,
  "cache_configuration": {
    "voice_cache": {
      "enabled": true,
      "max_size_mb": 16,
      "ttl_seconds": 3600,
      "eviction_policy": "lru"
    },
    "model_cache": {
      "enabled": true,
      "max_size_mb": 32,
      "ttl_seconds": 7200,
      "eviction_policy": "lru"
    },
    "text_processing_cache": {
      "enabled": true,
      "max_size_mb": 8,
      "ttl_seconds": 1800,
      "eviction_policy": "lru"
    },
    "audio_cache": {
      "enabled": true,
      "max_size_mb": 8,
      "ttl_seconds": 900,
      "eviction_policy": "lru"
    }
  },
  "monitoring_statistics": {
    "duration_seconds": 29.587769985198975,
    "samples_collected": 22,
    "min_memory_mb": 1079.734375,
    "max_memory_mb": 1138.78125,
    "avg_memory_mb": 1129.9563210227273,
    "memory_variance": 137.9053020634927,
    "peak_growth_mb": 59.046875
  },
  "leak_analysis": {
    "memory_growth_mb": 48.88671875,
    "monitoring_duration": 30,
    "potential_leaks": [],
    "top_memory_increases": []
  },
  "recommendations": [
    "Memory target achieved with 78.6MB headroom",
    "High GC activity - consider optimizing object allocation patterns"
  ]
}