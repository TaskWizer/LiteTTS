{
  "optimization_timestamp": 1757229113.8341155,
  "target_memory_mb": 150,
  "optimization_config": {
    "enable_pre_allocation": true,
    "pre_allocation_size_mb": 18,
    "enable_memory_pooling": true,
    "pool_size_mb": 9,
    "enable_aggressive_gc": false,
    "gc_threshold_mb": 7,
    "enable_memory_mapping": true,
    "cache_size_limit_mb": 75,
    "enable_lazy_loading": true,
    "memory_monitoring_interval": 5.0
  },
  "baseline_profile": {
    "total_memory_mb": 31852.3046875,
    "available_memory_mb": 6163.6640625,
    "used_memory_mb": 24472.98828125,
    "process_memory_mb": 1243.21875,
    "process_memory_percent": 3.903073143991003,
    "peak_memory_mb": 1245.16015625,
    "memory_growth_mb": -1.94140625,
    "gc_collections": {
      "generation_0": 13,
      "generation_1": 7,
      "generation_2": 1
    },
    "largest_objects": [
      {
        "size_mb": 53.00021743774414,
        "count": 8,
        "filename": "    buffer = bytearray(size)"
      },
      {
        "size_mb": 7.1735734939575195,
        "count": 62939,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 6.929957389831543,
        "count": 115312,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 0.9964504241943359,
        "count": 8,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.6332712173461914,
        "count": 5725,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.593073844909668,
        "count": 6810,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.24968719482421875,
        "count": 30,
        "filename": "    return Loop()"
      },
      {
        "size_mb": 0.19687747955322266,
        "count": 1528,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.16202354431152344,
        "count": 587,
        "filename": "  File \"<frozen abc>\", line 106"
      },
      {
        "size_mb": 0.1388397216796875,
        "count": 513,
        "filename": "    return type(attr_class_name, (tuple,), body)"
      }
    ]
  },
  "final_profile": {
    "total_memory_mb": 31852.3046875,
    "available_memory_mb": 6232.1171875,
    "used_memory_mb": 24411.05078125,
    "process_memory_mb": 1241.55078125,
    "process_memory_percent": 3.8978365723634103,
    "peak_memory_mb": 1245.16015625,
    "memory_growth_mb": -3.609375,
    "gc_collections": {
      "generation_0": 5,
      "generation_1": 1,
      "generation_2": 4
    },
    "largest_objects": [
      {
        "size_mb": 58.00032615661621,
        "count": 12,
        "filename": "    buffer = bytearray(size)"
      },
      {
        "size_mb": 7.1735734939575195,
        "count": 62939,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 6.929957389831543,
        "count": 115312,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 0.9964504241943359,
        "count": 8,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.6332712173461914,
        "count": 5725,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.593073844909668,
        "count": 6810,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.24968719482421875,
        "count": 30,
        "filename": "    return Loop()"
      },
      {
        "size_mb": 0.19687747955322266,
        "count": 1528,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.16202354431152344,
        "count": 587,
        "filename": "  File \"<frozen abc>\", line 106"
      },
      {
        "size_mb": 0.1388397216796875,
        "count": 513,
        "filename": "    return type(attr_class_name, (tuple,), body)"
      }
    ]
  },
  "memory_improvement": {
    "baseline_memory_mb": 1243.21875,
    "final_memory_mb": 1241.55078125,
    "memory_change_mb": -1.66796875,
    "target_achieved": true
  },
  "pre_allocation_success": true,
  "cache_configuration": {
    "voice_cache": {
      "enabled": true,
      "max_size_mb": 18,
      "ttl_seconds": 3600,
      "eviction_policy": "lru"
    },
    "model_cache": {
      "enabled": true,
      "max_size_mb": 37,
      "ttl_seconds": 7200,
      "eviction_policy": "lru"
    },
    "text_processing_cache": {
      "enabled": true,
      "max_size_mb": 9,
      "ttl_seconds": 1800,
      "eviction_policy": "lru"
    },
    "audio_cache": {
      "enabled": true,
      "max_size_mb": 9,
      "ttl_seconds": 900,
      "eviction_policy": "lru"
    }
  },
  "monitoring_statistics": {
    "duration_seconds": 29.876720905303955,
    "samples_collected": 22,
    "min_memory_mb": 1241.23828125,
    "max_memory_mb": 1241.55078125,
    "avg_memory_mb": 1241.2808948863637,
    "memory_variance": 0.011500839359504134,
    "peak_growth_mb": 0.3125
  },
  "leak_analysis": {
    "memory_growth_mb": 15.83203125,
    "monitoring_duration": 30,
    "potential_leaks": [],
    "top_memory_increases": []
  },
  "recommendations": [
    "Memory target achieved with 151.7MB headroom"
  ]
}