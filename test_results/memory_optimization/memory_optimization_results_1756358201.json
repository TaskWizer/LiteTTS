{
  "optimization_timestamp": 1756358201.5756521,
  "target_memory_mb": 150,
  "optimization_config": {
    "enable_pre_allocation": true,
    "pre_allocation_size_mb": 32,
    "enable_memory_pooling": true,
    "pool_size_mb": 16,
    "enable_aggressive_gc": true,
    "gc_threshold_mb": 15,
    "enable_memory_mapping": true,
    "cache_size_limit_mb": 64,
    "enable_lazy_loading": true,
    "memory_monitoring_interval": 1.0
  },
  "baseline_profile": {
    "total_memory_mb": 31852.31640625,
    "available_memory_mb": 16906.65234375,
    "used_memory_mb": 13315.50390625,
    "process_memory_mb": 614.17578125,
    "process_memory_percent": 1.9281981674949318,
    "peak_memory_mb": 614.17578125,
    "memory_growth_mb": 18.28515625,
    "gc_collections": {
      "generation_0": 11,
      "generation_1": 2,
      "generation_2": 1
    },
    "largest_objects": [
      {
        "size_mb": 8.62987995147705,
        "count": 60627,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 6.929121971130371,
        "count": 115303,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 0.9964065551757812,
        "count": 7,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.8385429382324219,
        "count": 6517,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.36420440673828125,
        "count": 4456,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.19765567779541016,
        "count": 1538,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.18285274505615234,
        "count": 680,
        "filename": "  File \"<frozen abc>\", line 106"
      },
      {
        "size_mb": 0.13814067840576172,
        "count": 1609,
        "filename": "    script.splitlines(True),"
      },
      {
        "size_mb": 0.12200927734375,
        "count": 1999,
        "filename": "    return (self.size, self.count, self.traceback)"
      },
      {
        "size_mb": 0.12115859985351562,
        "count": 513,
        "filename": "    return type(attr_class_name, (tuple,), body)"
      }
    ]
  },
  "final_profile": {
    "total_memory_mb": 31852.31640625,
    "available_memory_mb": 16925.21484375,
    "used_memory_mb": 13310.3203125,
    "process_memory_mb": 684.5703125,
    "process_memory_percent": 2.149201030684459,
    "peak_memory_mb": 684.5703125,
    "memory_growth_mb": 88.6796875,
    "gc_collections": {
      "generation_0": 107,
      "generation_1": 7,
      "generation_2": 4
    },
    "largest_objects": [
      {
        "size_mb": 21.000163078308105,
        "count": 6,
        "filename": "    buffer = bytearray(size)"
      },
      {
        "size_mb": 8.62987995147705,
        "count": 60627,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 6.929121971130371,
        "count": 115303,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 0.9964065551757812,
        "count": 7,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.9340028762817383,
        "count": 7632,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.498138427734375,
        "count": 2,
        "filename": "    array = numpy.ndarray(count, dtype=dtype)"
      },
      {
        "size_mb": 0.364105224609375,
        "count": 4454,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.19765567779541016,
        "count": 1538,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.18285274505615234,
        "count": 680,
        "filename": "  File \"<frozen abc>\", line 106"
      },
      {
        "size_mb": 0.13814067840576172,
        "count": 1609,
        "filename": "    script.splitlines(True),"
      }
    ]
  },
  "memory_improvement": {
    "baseline_memory_mb": 614.17578125,
    "final_memory_mb": 684.5703125,
    "memory_change_mb": 70.39453125,
    "target_achieved": true
  },
  "pre_allocation_success": true,
  "cache_configuration": {
    "voice_cache": {
      "enabled": true,
      "max_size_mb": 16,
      "ttl_seconds": 3600,
      "eviction_policy": "lru"
    },
    "model_cache": {
      "enabled": true,
      "max_size_mb": 32,
      "ttl_seconds": 7200,
      "eviction_policy": "lru"
    },
    "text_processing_cache": {
      "enabled": true,
      "max_size_mb": 8,
      "ttl_seconds": 1800,
      "eviction_policy": "lru"
    },
    "audio_cache": {
      "enabled": true,
      "max_size_mb": 8,
      "ttl_seconds": 900,
      "eviction_policy": "lru"
    }
  },
  "monitoring_statistics": {
    "duration_seconds": 29.15437126159668,
    "samples_collected": 22,
    "min_memory_mb": 642.91796875,
    "max_memory_mb": 682.71484375,
    "avg_memory_mb": 678.9946732954545,
    "memory_variance": 68.900194404539,
    "peak_growth_mb": 39.796875
  },
  "leak_analysis": {
    "memory_growth_mb": 79.07421875,
    "monitoring_duration": 30,
    "potential_leaks": [
      "Significant memory growth detected"
    ],
    "top_memory_increases": []
  },
  "recommendations": [
    "Memory target achieved with 79.6MB headroom",
    "High GC activity - consider optimizing object allocation patterns"
  ]
}