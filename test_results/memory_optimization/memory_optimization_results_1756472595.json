{
  "optimization_timestamp": 1756472595.4588857,
  "target_memory_mb": 150,
  "optimization_config": {
    "enable_pre_allocation": true,
    "pre_allocation_size_mb": 32,
    "enable_memory_pooling": true,
    "pool_size_mb": 16,
    "enable_aggressive_gc": true,
    "gc_threshold_mb": 15,
    "enable_memory_mapping": true,
    "cache_size_limit_mb": 64,
    "enable_lazy_loading": true,
    "memory_monitoring_interval": 1.0
  },
  "baseline_profile": {
    "total_memory_mb": 31852.31640625,
    "available_memory_mb": 12111.703125,
    "used_memory_mb": 18031.99609375,
    "process_memory_mb": 1067.8359375,
    "process_memory_percent": 3.352459280765123,
    "peak_memory_mb": 1067.8359375,
    "memory_growth_mb": 17.62890625,
    "gc_collections": {
      "generation_0": 9,
      "generation_1": 7,
      "generation_2": 10
    },
    "largest_objects": [
      {
        "size_mb": 7.045565605163574,
        "count": 117025,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 6.543484687805176,
        "count": 57494,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 0.9963207244873047,
        "count": 5,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.4544086456298828,
        "count": 5390,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.2827291488647461,
        "count": 3362,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.24968719482421875,
        "count": 30,
        "filename": "    return Loop()"
      },
      {
        "size_mb": 0.1972208023071289,
        "count": 1531,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.15339183807373047,
        "count": 557,
        "filename": "  File \"<frozen abc>\", line 106"
      },
      {
        "size_mb": 0.13886642456054688,
        "count": 515,
        "filename": "    return type(attr_class_name, (tuple,), body)"
      },
      {
        "size_mb": 0.13814258575439453,
        "count": 1609,
        "filename": "    script.splitlines(True),"
      }
    ]
  },
  "final_profile": {
    "total_memory_mb": 31852.31640625,
    "available_memory_mb": 11971.29296875,
    "used_memory_mb": 18006.1171875,
    "process_memory_mb": 1139.37109375,
    "process_memory_percent": 3.577043123703351,
    "peak_memory_mb": 1139.37109375,
    "memory_growth_mb": 89.1640625,
    "gc_collections": {
      "generation_0": 105,
      "generation_1": 6,
      "generation_2": 6
    },
    "largest_objects": [
      {
        "size_mb": 21.000163078308105,
        "count": 6,
        "filename": "    buffer = bytearray(size)"
      },
      {
        "size_mb": 7.045565605163574,
        "count": 117025,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 6.541668891906738,
        "count": 57482,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 0.9963207244873047,
        "count": 5,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.498138427734375,
        "count": 2,
        "filename": "    array = numpy.ndarray(count, dtype=dtype)"
      },
      {
        "size_mb": 0.4542980194091797,
        "count": 5388,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.3384103775024414,
        "count": 4012,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.24968719482421875,
        "count": 30,
        "filename": "    return Loop()"
      },
      {
        "size_mb": 0.1972208023071289,
        "count": 1531,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.15339183807373047,
        "count": 557,
        "filename": "  File \"<frozen abc>\", line 106"
      }
    ]
  },
  "memory_improvement": {
    "baseline_memory_mb": 1067.8359375,
    "final_memory_mb": 1139.37109375,
    "memory_change_mb": 71.53515625,
    "target_achieved": true
  },
  "pre_allocation_success": true,
  "cache_configuration": {
    "voice_cache": {
      "enabled": true,
      "max_size_mb": 16,
      "ttl_seconds": 3600,
      "eviction_policy": "lru"
    },
    "model_cache": {
      "enabled": true,
      "max_size_mb": 32,
      "ttl_seconds": 7200,
      "eviction_policy": "lru"
    },
    "text_processing_cache": {
      "enabled": true,
      "max_size_mb": 8,
      "ttl_seconds": 1800,
      "eviction_policy": "lru"
    },
    "audio_cache": {
      "enabled": true,
      "max_size_mb": 8,
      "ttl_seconds": 900,
      "eviction_policy": "lru"
    }
  },
  "monitoring_statistics": {
    "duration_seconds": 28.97052764892578,
    "samples_collected": 22,
    "min_memory_mb": 1081.7578125,
    "max_memory_mb": 1136.8828125,
    "avg_memory_mb": 1131.6091974431818,
    "memory_variance": 131.91794166880206,
    "peak_growth_mb": 55.125
  },
  "leak_analysis": {
    "memory_growth_mb": 73.5234375,
    "monitoring_duration": 30,
    "potential_leaks": [
      "Significant memory growth detected"
    ],
    "top_memory_increases": []
  },
  "recommendations": [
    "Memory target achieved with 78.5MB headroom",
    "High GC activity - consider optimizing object allocation patterns"
  ]
}