{
  "optimization_timestamp": 1757124589.5007217,
  "target_memory_mb": 1024,
  "optimization_config": {
    "enable_pre_allocation": true,
    "pre_allocation_size_mb": 64,
    "enable_memory_pooling": true,
    "pool_size_mb": 32,
    "enable_aggressive_gc": false,
    "gc_threshold_mb": 51,
    "enable_memory_mapping": true,
    "cache_size_limit_mb": 256,
    "enable_lazy_loading": true,
    "memory_monitoring_interval": 5.0
  },
  "baseline_profile": {
    "total_memory_mb": 31852.3046875,
    "available_memory_mb": 7330.4765625,
    "used_memory_mb": 22998.95703125,
    "process_memory_mb": 1133.77734375,
    "process_memory_percent": 3.5594829161449515,
    "peak_memory_mb": 1133.77734375,
    "memory_growth_mb": 18.31640625,
    "gc_collections": {
      "generation_0": 6,
      "generation_1": 4,
      "generation_2": 10
    },
    "largest_objects": [
      {
        "size_mb": 6.929694175720215,
        "count": 115308,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 6.481287002563477,
        "count": 56828,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 0.9964065551757812,
        "count": 7,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.45205116271972656,
        "count": 5375,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.3428382873535156,
        "count": 4089,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.24968719482421875,
        "count": 30,
        "filename": "    return Loop()"
      },
      {
        "size_mb": 0.19715595245361328,
        "count": 1531,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.14757728576660156,
        "count": 537,
        "filename": "  File \"<frozen abc>\", line 106"
      },
      {
        "size_mb": 0.13886642456054688,
        "count": 515,
        "filename": "    return type(attr_class_name, (tuple,), body)"
      },
      {
        "size_mb": 0.13814353942871094,
        "count": 1609,
        "filename": "    script.splitlines(True),"
      }
    ]
  },
  "final_profile": {
    "total_memory_mb": 31852.3046875,
    "available_memory_mb": 8065.21484375,
    "used_memory_mb": 22169.3046875,
    "process_memory_mb": 1232.28125,
    "process_memory_percent": 3.8687349693838384,
    "peak_memory_mb": 1232.28125,
    "memory_growth_mb": 116.8203125,
    "gc_collections": {
      "generation_0": 5,
      "generation_1": 15,
      "generation_2": 15
    },
    "largest_objects": [
      {
        "size_mb": 53.00021743774414,
        "count": 8,
        "filename": "    buffer = bytearray(size)"
      },
      {
        "size_mb": 6.929579734802246,
        "count": 115307,
        "filename": "    obj, end = self.scan_once(s, idx)"
      },
      {
        "size_mb": 6.480066299438477,
        "count": 56820,
        "filename": "  File \"<frozen importlib._bootstrap_external>\", line 757"
      },
      {
        "size_mb": 0.9964065551757812,
        "count": 7,
        "filename": "    voice_data = np.fromfile(voice_file, dtype=np.float32)"
      },
      {
        "size_mb": 0.4875144958496094,
        "count": 5710,
        "filename": "    lines = fp.readlines()"
      },
      {
        "size_mb": 0.4520082473754883,
        "count": 5374,
        "filename": "  File \"<frozen importlib._bootstrap>\", line 488"
      },
      {
        "size_mb": 0.24968719482421875,
        "count": 30,
        "filename": "    return Loop()"
      },
      {
        "size_mb": 0.19715595245361328,
        "count": 1531,
        "filename": "    bytecode = compile(script, filename, \"exec\")"
      },
      {
        "size_mb": 0.14757728576660156,
        "count": 537,
        "filename": "  File \"<frozen abc>\", line 106"
      },
      {
        "size_mb": 0.13886642456054688,
        "count": 515,
        "filename": "    return type(attr_class_name, (tuple,), body)"
      }
    ]
  },
  "memory_improvement": {
    "baseline_memory_mb": 1133.77734375,
    "final_memory_mb": 1232.28125,
    "memory_change_mb": 98.50390625,
    "target_achieved": true
  },
  "pre_allocation_success": true,
  "cache_configuration": {
    "voice_cache": {
      "enabled": true,
      "max_size_mb": 50,
      "ttl_seconds": 3600,
      "eviction_policy": "lru"
    },
    "model_cache": {
      "enabled": true,
      "max_size_mb": 100,
      "ttl_seconds": 7200,
      "eviction_policy": "lru"
    },
    "text_processing_cache": {
      "enabled": true,
      "max_size_mb": 25,
      "ttl_seconds": 1800,
      "eviction_policy": "lru"
    },
    "audio_cache": {
      "enabled": true,
      "max_size_mb": 25,
      "ttl_seconds": 900,
      "eviction_policy": "lru"
    }
  },
  "monitoring_statistics": {
    "duration_seconds": 29.64463186264038,
    "samples_collected": 22,
    "min_memory_mb": 1188.48046875,
    "max_memory_mb": 1232.28125,
    "avg_memory_mb": 1228.6136363636363,
    "memory_variance": 88.53551123753067,
    "peak_growth_mb": 43.80078125
  },
  "leak_analysis": {
    "memory_growth_mb": 22.8828125,
    "monitoring_duration": 30,
    "potential_leaks": [],
    "top_memory_increases": []
  },
  "recommendations": [
    "Memory target achieved with 925.5MB headroom",
    "High memory growth detected - investigate potential memory leaks",
    "Large cache size may impact memory usage - monitor cache hit rates"
  ]
}