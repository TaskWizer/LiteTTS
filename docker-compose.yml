services:
  litetts:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: production
    image: litetts:fixed
    container_name: litetts-api
    ports:
      - "8354:8354"  # Expose LiteTTS API port
    environment:
      # Core application settings
      - ENVIRONMENT=production
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1

      # Performance optimization
      - ENABLE_PERFORMANCE_OPTIMIZATION=true
      - MAX_MEMORY_MB=4096
      - TARGET_RTF=0.25

      # Server configuration
      - LITETTS_HOST=0.0.0.0
      - LITETTS_PORT=8354
      - LITETTS_WORKERS=4  # Reduced for better resource usage

      # Logging
      - LITETTS_LOG_LEVEL=INFO
      - LITETTS_LOG_DIR=/app/docs/logs

      # Cache configuration
      - LITETTS_CACHE_ENABLED=true
      - LITETTS_CACHE_SIZE=1024  # Optimized for memory usage
      - LITETTS_CACHE_TTL=7200

      # Model configuration
      - LITETTS_DEVICE=cpu
      - LITETTS_MODEL_PATH=/app/LiteTTS/models/model_q4.onnx
      - LITETTS_VOICES_PATH=/app/LiteTTS/voices

      # Features
      - LITETTS_WATERMARKING_ENABLED=true

      # Security
      - LITETTS_API_KEY_REQUIRED=false
      - LITETTS_CORS_ORIGINS=*
    volumes:
      # Persistent storage for models and voices
      - ./LiteTTS/models:/app/LiteTTS/models:ro
      - ./LiteTTS/voices:/app/LiteTTS/voices
      - litetts-cache:/app/LiteTTS/cache
      - litetts-logs:/app/docs/logs
    restart: unless-stopped
    networks:
      - owui-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8354/health"]
      interval: 45s  # Optimized intervals
      timeout: 15s
      retries: 2
      start_period: 90s
    deploy:
      resources:
        limits:
          memory: 4096M
          cpus: '8.0'
        reservations:
          memory: 1024M
          cpus: '2'

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    ports:
      - "3000:8080"  # Expose OpenWebUI on port 3000 to avoid conflicts
    environment:
      - AUDIO_TTS_ENGINE=custom
      - AUDIO_TTS_API_URL=http://litetts:8354
      - AUDIO_TTS_API_KEY=not-needed
      - AUDIO_TTS_VOICE=af_heart  # Set a default voice
      - CHROMA_URL=http://chroma:8000
    volumes:
      - openwebui-data:/app/backend/data
    depends_on:
      - litetts
      - chroma
    restart: unless-stopped
    networks:
      - owui-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    ports:
      - "${CADDY_HTTP_PORT:-80}:80"  # Main web interface via Caddy reverse proxy
      # Uncomment the following line to enable HTTPS
      # - "${CADDY_HTTPS_PORT:-443}:443"
    volumes:
      - caddy-data:/data
      - caddy-config:/config
      - ./config/Caddyfile:/etc/caddy/Caddyfile:ro
    restart: unless-stopped
    networks:
      - owui-network

  chroma:
    image: chromadb/chroma:latest
    container_name: chroma
    ports:
      - "8000:8000"  # Expose Chroma database port
    environment:
      - IS_PERSISTENT=TRUE
      - ALLOW_RESET=TRUE
    volumes:
      - chroma-data:/chroma/chroma
    restart: unless-stopped
    networks:
      - owui-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s

volumes:
  litetts-cache:
  litetts-logs:
  openwebui-data:
  caddy-data:
  caddy-config:
  chroma-data:

networks:
  owui-network:
    driver: bridge